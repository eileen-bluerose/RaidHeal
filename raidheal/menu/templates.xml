<Ui xmlns="http://www.runewaker.com/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.runewaker.com/UI.xsd">
    <Frame name="RH_BaseFrame" virtual="true">
        <Anchors>
            <Anchor point="CENTER">
                <Offset>
                    <AbsDimension x="0" y="0"/>
                </Offset>
            </Anchor>
        </Anchors>
        <Layers>
            <Layer level="BACKGROUND">
                <Texture name="$parentBackgroundTopLeft" file="interface/common/panelcommonframe">
                    <Size>
                        <AbsDimension x="64" y="64"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOPLEFT"/>
                    </Anchors>
                    <TexCoords left="0" right="0.25" top="0" bottom="0.25"/>
                </Texture>
                <Texture name="$parentBackgroundTopRight" file="interface/common/panelcommonframe">
                    <Size>
                        <AbsDimension x="96" y="64"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOPRIGHT"/>
                    </Anchors>
                    <TexCoords left="0.625" right="1" top="0" bottom="0.25"/>
                </Texture>
                <Texture name="$parentBackgroundBottomLeft" file="interface/common/panelcommonframe">
                    <Size>
                        <AbsDimension x="64" y="64"/>
                    </Size>
                    <Anchors>
                        <Anchor point="BOTTOMLEFT"/>
                    </Anchors>
                    <TexCoords left="0" right="0.25" top="0.75" bottom="1"/>
                </Texture>
                <Texture name="$parentBackgroundBottomRight" file="interface/common/panelcommonframe">
                    <Size>
                        <AbsDimension x="96" y="64"/>
                    </Size>
                    <Anchors>
                        <Anchor point="BOTTOMRIGHT"/>
                    </Anchors>
                    <TexCoords left="0.625" right="1" top="0.75" bottom="1"/>
                </Texture>
                <Texture name="$parentBackgroundTop" file="interface/common/panelcommonframe">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="TOPRIGHT" relativeTo="$parentBackgroundTopLeft"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMLEFT" relativeTo="$parentBackgroundTopRight"/>
                    </Anchors>
                    <TexCoords left="0.25" right="0.625" top="0" bottom="0.25"/>
                </Texture>
                <Texture name="$parentBackgroundLeft" file="interface/common/panelcommonframe">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" relativeTo="$parentBackgroundTopLeft"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="TOPRIGHT" relativeTo="$parentBackgroundBottomLeft"/>
                    </Anchors>
                    <TexCoords left="0" right="0.25" top="0.25" bottom="0.75"/>
                </Texture>
                <Texture name="$parentBackgroundCenter" file="interface/common/panelcommonframe">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMRIGHT" relativeTo="$parentBackgroundTopLeft"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="TOPLEFT" relativeTo="$parentBackgroundBottomRight"/>
                    </Anchors>
                    <TexCoords left="0.25" right="0.625" top="0.25" bottom="0.75"/>
                </Texture>
                <Texture name="$parentBackgroundRight" file="interface/common/panelcommonframe">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" relativeTo="$parentBackgroundTopRight"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="TOPRIGHT" relativeTo="$parentBackgroundBottomRight"/>
                    </Anchors>
                    <TexCoords left="0.625" right="1" top="0.25" bottom="0.75"/>
                </Texture>
                <Texture name="$parentBackgroundBottom" file="interface/common/panelcommonframe">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="TOPRIGHT" relativeTo="$parentBackgroundBottomLeft"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMLEFT"
                                relativeTo="$parentBackgroundBottomRight"/>
                    </Anchors>
                    <TexCoords left="0.25" right="0.625" top="0.75" bottom="1"/>
                </Texture>
            </Layer>
        </Layers>
        <Frames>
            <Button name="$parentCloseButton">
                <Size>
                    <AbsDimension x="20" y="20"/>
                </Size>
                <Anchors>
                    <Anchor point="TOPRIGHT">
                        <Offset>
                            <AbsDimension x="-3" y="2"/>
                        </Offset>
                    </Anchor>
                </Anchors>
                <NormalTexture file="interface/buttons/panelclosebutton-normal">
                    <TexCoords left="0" right="0.625" top="0" bottom="0.625"/>
                </NormalTexture>
                <PushedTexture file="interface/buttons/panelclosebutton-depress">
                    <TexCoords left="0" right="0.625" top="0" bottom="0.625"/>
                </PushedTexture>
                <HighlightTexture file="interface/buttons/panelclosebutton-highlight" alphaMode="ADD">
                    <TexCoords left="0" right="0.625" top="0" bottom="0.625"/>
                </HighlightTexture>
                <Scripts>
                    <OnClick>
                        this:GetParent():Hide()
                    </OnClick>
                </Scripts>
            </Button>
        </Frames>
    </Frame>

    <Frame name="RH_OptionBaseTemplate" virtual="true" enableMouse="true">
        <Size>
            <AbsDimension x="180" y="25"/>
        </Size>
        <Layers>
            <Layer level="ARTWORK">
                <FontString name="$parent_Text" justifyH="LEFT" justifyV="MIDDLE" inherits="GameFontHighlight">
                    <Size>
                        <AbsDimension x="180" y="20"/>
                    </Size>
                    <Anchors>
                        <Anchor point="LEFT"/>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
        <Scripts>
            <OnEnter>
                if this.tooltip then RaidHeal.Menu.ShowTooltip(this) end
            </OnEnter>
            <OnLeave>
                if this.tooltip then RaidHeal.Menu.HideTooltip(this) end
            </OnLeave>
        </Scripts>
    </Frame>

    <Frame name="RH_OptionCheckButtonTemplate" virtual="true" inherits="RH_OptionBaseTemplate">
        <Frames>
            <CheckButton name="$parent_CheckButton" inherits="UIPanelCheckButtonTemplate">
                <Anchors>
                    <Anchor point="RIGHT"/>
                </Anchors>
                <Size>
                    <AbsDimension x="20" y="20"/>
                </Size>
                <Scripts>
                    <OnLoad>
                        local parent = this:GetParent()
                        parent._checkButton = this
                        parent._text = getglobal(parent:GetName() .. "_Text")
                        parent._type = "CheckButton"
                    </OnLoad>
                    <OnClick>
                        if this:GetParent()._bind then
                            RaidHeal.Menu.UpdateBoundElement(this:GetParent())
                        end
                    </OnClick>
                </Scripts>
            </CheckButton>
        </Frames>
        <Scripts>
            <OnShow>
                if this._bind then
                    RaidHeal.Menu.ShowBoundElement(this)
                end
                if this._loadText then
                    RaidHeal.Menu.ShowText(this)
                end
            </OnShow>
            <OnEnter>
                if not this._disable then
                    if this._checkButton then this._checkButton:LockHighlight() end

                    if this.tooltip then RaidHeal.Menu.ShowTooltip(this) end
                end
            </OnEnter>
            <OnLeave>
                if not this._disable then
                    if this._checkButton then this._checkButton:UnlockHighlight() end

                    if this.tooltip then RaidHeal.Menu.HideTooltip(this) end
                end
            </OnLeave>
            <OnClick>
                if this._checkButton and not this._disable then
                    this._checkButton:SetChecked(not this._checkButton:IsChecked())
                    if this._bind then
                        RaidHeal.Menu.UpdateBoundElement(this)
                    end
                end
            </OnClick>
        </Scripts>
    </Frame>

    <Frame name="RH_OptionDropDownButtonTemplate" virtual="true" inherits="RH_OptionBaseTemplate">
        <Frames>
            <Button name="$parent_DropDownButton" inherits="UIPanelButtonTemplate">
                <Size>
                    <AbsDimension x="70" y="20"/>
                </Size>
                <Anchors>
                    <Anchor point="RIGHT"/>
                </Anchors>
                <Scripts>
                    <OnLoad>
                        local parent = this:GetParent()
                        parent._button = this
                        parent._text = getglobal(parent:GetName() .. "_Text")
                        parent._type = "DropDownButton"
                    </OnLoad>
                    <OnClick>
                        UIDropDownMenu_SetAnchor(this, 0, 3, "TOPLEFT", "BOTTOMLEFT", this:GetName())
                        ToggleDropDownMenu(this)
                    </OnClick>
                </Scripts>
            </Button>
        </Frames>
        <Scripts>
            <OnShow>
                if this._bind then
                    RaidHeal.Menu.ShowBoundElement(this)
                end
                if this._loadText then
                    RaidHeal.Menu.ShowText(this)
                end
            </OnShow>
        </Scripts>
    </Frame>

    <Frame name="RH_OptionEditBoxTemplate" virtual="true" inherits="RH_OptionBaseTemplate">
        <Frames>
            <EditBox name="$parent_EditBox" inherits="UIPanelEditBoxTemplate">
                <Size>
                    <AbsDimension x="40" y="20"/>
                </Size>
                <Anchors>
                    <Anchor point="RIGHT"/>
                </Anchors>
                <Scripts>
                    <OnLoad>
                        local parent = this:GetParent()
                        parent._editBox = this
                        parent._text = getglobal(parent:GetName() .. "_Text")
                        parent._type = "EditBox"
                    </OnLoad>
                    <OnEscapePressed>
                        local parent = this:GetParent()
                        if parent._bind then RaidHeal.Menu.ShowBoundElement(parent) end
                        this:ClearFocus()
                    </OnEscapePressed>
                    <OnEnterPressed>
                        local parent = this:GetParent()
                        if parent._bind then RaidHeal.Menu.UpdateBoundElement(parent, this:GetText()) end
                        this:ClearFocus()
                    </OnEnterPressed>
                    <OnEditFocusLost>
                        local parent = this:GetParent()
                        if parent._bind then RaidHeal.Menu.ShowBoundElement(parent) end
                    </OnEditFocusLost>
                </Scripts>
                <FontString inherits="GameEditFont">
                    <Anchors>
                        <Anchor point="RIGHT"/>
                    </Anchors>
                </FontString>
            </EditBox>
        </Frames>
        <Scripts>
            <OnShow>
                if this._bind then
                    RaidHeal.Menu.ShowBoundElement(this)
                end

                if this._loadText then
                    RaidHeal.Menu.ShowText(this)
                end
            </OnShow>
            <OnClick>
                if this._editBox then this._editBox:SetFocus() end
            </OnClick>
        </Scripts>
    </Frame>

    <Frame name="RH_OptionColorTemplate" virtual="true" inherits="RH_OptionBaseTemplate">
        <Frames>
            <Frame name="$parent_ColorButton" enableMouse="true">
                <Size>
                    <AbsDimension x="80" y="20"/>
                </Size>
                <Anchors>
                    <Anchor point="RIGHT"/>
                </Anchors>
                <Layers>
                    <Layer level="ARTWORK">
                        <Texture name="$parent_ColorDisplay" file="interface/addons/raidheal/graphics/rect">
                            <Anchors>
                                <Anchor point="TOPLEFT"/>
                                <Anchor point="BOTTOMRIGHT"/>
                            </Anchors>
                        </Texture>
                    </Layer>
                </Layers>
                <Scripts>
                    <OnLoad>
                        local parent = this:GetParent()
                        parent._colorbutton = this
                        parent._type = "Color"
                        parent._text = getglobal(parent:GetName() .. "_Text")

                        this.R, this.G, this.B = 1, 1, 1
                        this.Display = getglobal(this:GetName() .. "_ColorDisplay")
                    </OnLoad>
                    <OnShow>
                        this.Display:SetColor(this.R, this.G, this.B)
                    </OnShow>
                    <OnClick>
                        local info = {
                            parent = this,
                            r = this.R,
                            g = this.G,
                            b = this.B,
                            callbackFuncOkay = function()
                                RaidHeal.Menu.UpdateBoundElement(this:GetParent())
                                this.Display:SetColor(this.R, this.G, this.B)
                            end
                        }
                        OpenColorPickerFrameEx(info)
                    </OnClick>
                </Scripts>
            </Frame>
        </Frames>
        <Scripts>
            <OnShow>
                if this._bind then
                    RaidHeal.Menu.ShowBoundElement(this)
                end

                if this._loadText then
                    RaidHeal.Menu.ShowText(this)
                end
            </OnShow>
        </Scripts>
    </Frame>

    <Frame name="RH_OptionTitleTemplate" virtual="true">
        <Size>
            <AbsDimension x="380" y="25"/>
        </Size>
        <Layers>
            <Layer level="BACKGROUND">
                <Texture file="Interface/Common/PanelSeparate-HorizontalLine">
                    <Size>
                        <AbsDimension x="380" y="4"/>
                    </Size>
                    <Anchors>
                        <Anchor point="BOTTOM"/>
                    </Anchors>
                </Texture>
            </Layer>
            <Layer level="ARTWORK">
                <FontString name="$parent_Text" inherits="GameFontNormal" justifyH="LEFT">
                    <Size>
                        <AbsDimension x="350" y="20"/>
                    </Size>
                    <Anchors>
                        <Anchor point="LEFT">
                            <Offset>
                                <AbsDimension x="15" y="0"/>
                            </Offset>
                        </Anchor>
                        <Anchor point="RIGHT">
                            <Offset>
                                <AbsDimension x="-15" y="0"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
                </FontString>
            </Layer>
        </Layers>
    </Frame>

    <Frame name="RH_ListItemTemplate" virtual="true" enableMouse="true">
        <Size>
            <AbsDimension x="0" y="20"/>
        </Size>
        <Layers>
            <Layer level="ARTWORK">
                <FontString name="$parent_Text" inherits="GameFontHighlight" justifyH="LEFT">
                    <Size>
                        <AbsDimension x="0" y="20"/>
                    </Size>
                    <Anchors>
                        <Anchor point="LEFT">
                            <Offset>
                                <AbsDimension x="10" y="0"/>
                            </Offset>
                        </Anchor>
                        <Anchor point="RIGHT">
                            <Offset>
                                <AbsDimension x="-10" y="0"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
                </FontString>
            </Layer>
            <Layer level="OVERLAY">
                <Texture name="$parent_Highlight" file="interface/buttons/listitemhighlight" alphaMode="ADD">
                    <Anchors>
                        <Anchor point="TOPLEFT">
                            <Offset>
                                <AbsDimension x="2" y="2"/>
                            </Offset>
                        </Anchor>
                        <Anchor point="BOTTOMRIGHT">
                            <Offset>
                                <AbsDimension x="-2" y="-2"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
                </Texture>
            </Layer>
        </Layers>
        <Scripts>
            <OnLoad>
                this._highlight = getglobal(this:GetName() .. "_Highlight")
                this._text = getglobal(this:GetName() .. "_Text")
                RaidHeal.Menu.RegisterListItem(this:GetParent(), this, this:GetID())
            </OnLoad>
            <OnEnter>
                this._isMouseOver = true
                this._highlight:Show()
                if this.tooltip then RaidHeal.Menu.ShowTooltip(this) end
            </OnEnter>
            <OnLeave>
                if not this.selected then
                   this._highlight:Hide()
                end
                if this.tooltip then RaidHeal.Menu.HideTooltip() end
                this._isMouseOver = false
            </OnLeave>
            <OnClick>
                RaidHeal.Menu.SelectListItem(this:GetParent(), this)
            </OnClick>
            <OnMouseWheel>
                local slider = (this:GetParent())._slider
                slider:SetValue(slider:GetValue() - (delta/math.abs(delta)))
                RaidHeal.Menu.UpdateList(this:GetParent())
            </OnMouseWheel>
        </Scripts>
    </Frame>

    <Frame name="RH_ListTemplate" virtual="true" enableMouse="true">
        <Layers>
            <Layer level="BACKGROUND">
                <Texture file="interface/common/panelscrollbar-broder" name="$parent_TopLeft">
                    <Size>
                        <AbsDimension x="4" y="4"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOPLEFT">
                            <Offset>
                                <AbsDimension x="-2" y="-2"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
                    <TexCoords left="0" right="0.25" top="0" bottom="0.0625"/>
                </Texture>
                <Texture file="interface/common/panelscrollbar-broder" name="$parent_TopRight">
                    <Size>
                        <AbsDimension x="4" y="4"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOPRIGHT">
                            <Offset>
                                <AbsDimension x="-18" y="-2"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
                    <TexCoords left="0.75" right="1" top="0" bottom="0.0625"/>
                </Texture>
                <Texture file="interface/common/panelscrollbar-broder" name="$parent_BottomLeft">
                    <Size>
                        <AbsDimension x="4" y="4"/>
                    </Size>
                    <Anchors>
                        <Anchor point="BOTTOMLEFT">
                            <Offset>
                                <AbsDimension x="-2" y="2"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
                    <TexCoords left="0" right="0.25" top="0.9375" bottom="1"/>
                </Texture>
                <Texture file="interface/common/panelscrollbar-broder" name="$parent_BottomRight">
                    <Size>
                        <AbsDimension x="4" y="4"/>
                    </Size>
                    <Anchors>
                        <Anchor point="BOTTOMRIGHT">
                            <Offset>
                                <AbsDimension x="-18" y="2"/>
                            </Offset>
                        </Anchor>
                    </Anchors>
                    <TexCoords left="0.75" right="1" top="0.9375" bottom="1"/>
                </Texture>
                <Texture file="interface/common/panelscrollbar-broder" name="$parent_Top">
                    <Size>
                        <AbsDimension x="0" y="4"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="TOPRIGHT" relativeTo="$parent_TopLeft"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMLEFT" relativeTo="$parent_TopRight"/>
                    </Anchors>
                    <TexCoords left="0.25" right="0.75" top="0" bottom="0.0625"/>
                </Texture>
                <Texture file="interface/common/panelscrollbar-broder" name="$parent_Bottom">
                    <Size>
                        <AbsDimension x="0" y="4"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="TOPRIGHT" relativeTo="$parent_BottomLeft"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMLEFT" relativeTo="$parent_BottomRight"/>
                    </Anchors>
                    <TexCoords left="0.25" right="0.75" top="0.9375" bottom="1"/>
                </Texture>
                <Texture file="interface/common/panelscrollbar-broder" name="$parent_Left">
                    <Size>
                        <AbsDimension x="4" y="0"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" relativeTo="$parent_TopLeft"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="TOPRIGHT" relativeTo="$parent_BottomLeft"/>
                    </Anchors>
                    <TexCoords left="0" right="0.25" top="0.0625" bottom="0.9375"/>
                </Texture>
                <Texture file="interface/common/panelscrollbar-broder" name="$parent_Right">
                    <Size>
                        <AbsDimension x="4" y="0"/>
                    </Size>
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMLEFT" relativeTo="$parent_TopRight"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="TOPRIGHT" relativeTo="$parent_BottomRight"/>
                    </Anchors>
                    <TexCoords left="0.75" right="1" top="0.0625" bottom="0.9375"/>
                </Texture>
                <Texture file="interface/common/panelscrollbar-broder" name="$parent_Middle">
                    <Anchors>
                        <Anchor point="TOPLEFT" relativePoint="BOTTOMRIGHT" relativeTo="$parent_TopLeft"/>
                        <Anchor point="BOTTOMRIGHT" relativePoint="TOPLEFT" relativeTo="$parent_BottomRight"/>
                    </Anchors>
                    <TexCoords left="0.25" right="0.75" top="0.0625" bottom="0.9375"/>
                </Texture>
            </Layer>
        </Layers>
        <Frames>
            <Slider name="$parent_Slider" inherits="UIPanelScrollBarHaveBackdropTemplate">
                <Anchors>
                    <Anchor point="TOPRIGHT" relativePoint="TOPRIGHT">
                        <Offset>
                            <AbsDimension x="0" y="16"/>
                        </Offset>
                    </Anchor>
                    <Anchor point="BOTTOMRIGHT" relativePoint="BOTTOMRIGHT">
                        <Offset>
                            <AbsDimension x="0" y="-16"/>
                        </Offset>
                    </Anchor>
                </Anchors>
                <Scripts>
                    <OnLoad>
                        local parent = this:GetParent()
                        parent._slider = this
                    </OnLoad>
                    <OnValueChanged>
                        UIPanelScrollBar_OnValueChanged(this, arg1)

                        local parent = this:GetParent()
                        parent._listData.Offset = this:GetValue()
                        RaidHeal.Menu.Update(parent)
                    </OnValueChanged>
                </Scripts>
            </Slider>
            <Frame name="$parent_ListItem1" id="1" inherits="RH_ListItemTemplate"/>
            <Frame name="$parent_ListItem2" id="2" inherits="RH_ListItemTemplate"/>
            <Frame name="$parent_ListItem3" id="3" inherits="RH_ListItemTemplate"/>
            <Frame name="$parent_ListItem4" id="4" inherits="RH_ListItemTemplate"/>
            <Frame name="$parent_ListItem5" id="5" inherits="RH_ListItemTemplate"/>
            <Frame name="$parent_ListItem6" id="6" inherits="RH_ListItemTemplate"/>
            <Frame name="$parent_ListItem7" id="7" inherits="RH_ListItemTemplate"/>
            <Frame name="$parent_ListItem8" id="8" inherits="RH_ListItemTemplate"/>
        </Frames>
        <Scripts>
            <OnMouseWheel>
                local slider = this._slider
                slider:SetValue(slider:GetValue() - (delta/math.abs(delta)))
            </OnMouseWheel>
            <OnLoad>
                RaidHeal.Menu.CreateList(this)
            </OnLoad>
            <OnShow>
                RaidHeal.Menu.UpdateListItems(this)
                RaidHeal.Menu.UpdateList(this)
            </OnShow>
        </Scripts>
    </Frame>

    <Frame name="RH_TooltipBackdrop" virtual="true">
        <Backdrop bgFile="Interface/Tooltips/Tooltip-background" edgeFile="Interface/Tooltips/Tooltip-border" tile="true">
            <EdgeSize>
                <AbsValue val="16"/>
            </EdgeSize>
            <TileSize>
                <AbsValue val="16"/>
            </TileSize>
            <BackgroundInsets>
                <AbsInset left="4" right="4" top="4" bottom="4"/>
            </BackgroundInsets>
        </Backdrop>
    </Frame>
</Ui>